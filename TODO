* junk Makefile, create python based driver/s?

* Use auto build_dependencies/dependency_dict: move
  def get_build_dependencies () --> def _get_build_dependencies ()
  junk get_dependency_dict () wherever possible [only target packages].

* FIX --keep option; debugging is next to impossible with all
  sources gone from target/*/src

* Try dropping LD_LIBRARY_PATH from wrapper scripts, check
   ## LD_LIBRARY_PATH is necessary for ao. FreeBSD.
  if this is still true after grand rpath hacking.

* python3 - python2 compatibility
** testing with python3
** keep check on diff with `make python3'
** remember to use
    list (map (..))
    list (DICT.keys, items, values)
    octal.o755 iso 0755/0o755

    from gub.syntax import printf
    printf () rather than print/print ()

    except:
	t, v, b = sys.exc_info ()
	if t == NameError:
        ...

* support for ccache and icecc (icecream)
  icecc requires no setup/init effort other than picking the host
  that runs the scheduler, and works automagically with cross compilers.
  -junk distcc cruft [distcc pump?  find comparison with icecream)

* we moeten env ook nog ergens losknippen. We zetten nu onze
  eigen variabelen over de user zijn env heen, maar dan kan er dus (niet
  gechecksumde) info uit de user environment lekken.

* automagical support for get_dependency_dict () if not set, from
  get_build_dependencies ().

* junk arbitrary SdkBuild class, handle any build dependencies
  through [module.py].build_dependencies.

* junk use of /usr in code, use *_prefix) or %(prefix_dir)s

* junk use of /cross in code, use %(cross_dir)s

* use better names for freebsd-runtime, darwin-sdk, which probably
  are in fact kernel-headers and libc+headers

* use of member functions vs class variables/static functions:
   - need_source_tree
   - build_dependencies
   - dependencies
   - force_sequential_build

* Fix --branch mess:

  -gub: --branch=<PACKAGE>=<BRANCH>:<LOCAL_BRANCH>, eg
        --branch=lilypond=master-git.sv.gnu.org-lilypond.git
  -cron-builder: --branch=<LILYPOND-BRANCH>
                 --local-branch=<LILYPOND-LOCAL-BRANCH>
    + `branch' means remote branch
  -installer-builder: --branch=<PACKAGE>=<LOCAL_BRANCH>
    + `branch' means local branch

* Remove duplication of directory layout.  layout is partly duplicated
  in test-lily/* and *.make.  gub/settings should usable now from any
  .py, gub/settings.py --plaftorm '' prints layout for use in sh/make.

* Document and make easier [plugin.., see gub/gup.py] to add new platform

    -3. gub/settings.py
    -2. gub/config_cache.py
    -1. gub/installer.py
     0. lilypond.make
     1. toevoegen aan platforms in makefile
     2. toevoegen aan platform lijst, die in test-lily/upload wordt gebruikt.

* cron-builder: disable initial download:
  --stage=download depends on tools to be built:
   /usr/bin/python bin/gub --branch=lilypond=master:master-git.sv.gnu.org-lilypond.git --platform=linux-64 --stage=download lilypond
  File "/home/janneke/vc/gub-test/gub/specs/fontconfig.py", line 33, in freetype_cflags
    raise SystemFailed ('Pipe failed: %(cmd)s' % locals ())
SystemFailed: Pipe failed: /home/janneke/vc/gub-test/target/tools/root/usr/bin/freetype-config --cflags


* Get rid of (all?), *args and **kwarg constructions, at least where
  they are now part of the user api.
** done for (most important?) command.py:System, loggedos.system

* Resurrect/add:
  --keep [most annoying for debugging]
  --force [partly fixed: force full rebuild]
  --immediate? vs serialized

* Printing/logging to console

** oslog.verbose_flag for tar commands has been commented-out?  Old
   behaviour is somewhat foo but better than no behaviour at all.  We
   should *always* use -v but send that output to different pipe.  It
   should *always* be in .log file, but printed to console only if
   verbosity > 'command'.
   
* Smarter checksumming for functions: should add a dry-run to loggedos
  so we can do dry-run on functions; then run dry-run on a dummy
  argument.

* investigate flavours of libtool_la fixups:
   - gubb.libtool_installed_la_fixups ()
   - gup.libtool_la_fixup ()
   - targetpackage.pre_install_libtool_fixup ()

* cron-builder: disable initial download:
  --stage=download depends on tools to be built:
   /usr/bin/python bin/gub --branch=lilypond=master:master-git.sv.gnu.org-lilypond.git --platform=linux-64 --stage=download lilypond
  File "/home/janneke/vc/gub-test/gub/specs/fontconfig.py", line 33, in freetype_cflags
    raise SystemFailed ('Pipe failed: %(cmd)s' % locals ())
SystemFailed: Pipe failed: /home/janneke/vc/gub-test/target/tools/root/usr/bin/freetype-config --cflags


* Get rid of (all?), *args and **kwarg constructions, at least where
  they are now part of the user api.
** done for (most important?) command.py:System, loggedos.system

* Resurrect/add:
  --keep [most annoying for debugging]
  --force [partly fixed: force full rebuild]
  --immediate? vs serialized

* Printing/logging to console

** oslog.verbose_flag for tar commands has been commented-out?  Old
   behaviour is somewhat foo but better than no behaviour at all.  We
   should *always* use -v but send that output to different pipe.  It
   should *always* be in .log file, but printed to console only if
   verbosity > 'command'.
   
* Smarter checksumming for functions: should add a dry-run to loggedos
  so we can do dry-run on functions; then run dry-run on a dummy
  argument.

* investigate flavours of libtool_la fixups:
   - gubb.libtool_installed_la_fixups ()
   - gup.libtool_la_fixup ()
   - targetpackage.pre_install_libtool_fixup ()

RENAMES

* repository -> source
* ./gub -> gublib ?
* ./gub/specs -> gub/builds?

* Use names of stage iso number in status/stamp file.

* code cygwin installer as alternative build spec.

* code .deb/ipkg installer as alternative build spec.

* look at other installer-builders -> build spec?

* Automagically do:  # # FIXME libtool too olds for autotool packages.

* fix all instances of makeflags () and compile/install

* move wrap_pkg_config from libgphoto2 to target/build spec (note
  configure: PATH setting?)

* Bootstrap whole toolchain from source on more platforms (freebsd)?

* Fix configure/make command env var settings (grep FIXME)

 @subst_method
 def CFLAGS(self):
    return 'bla'

or

 def init(self):
   self.CFLAGS='bla'   ? see noweb, no go?

* Packages file with download and update facility, like
  cyg-apt.

LOWER PRIORITY

* do not package emtpy subpackages (doc, devel)

- replace os. calls with os.context wrapper ones (make a real
  dry-run to quick-test all .py scripts?)

- name for gub-tester (test-repo, repo-builder?)

- Split gub/*py into packager, builder, platform

- Explode inheritance, and use membership in GUP

- move patches upstream, eg.

  * libpng

  * python x-compile.

  * cygwin GCC

  * zlib

- update packages:

  * Gnome 2.16

- strip lily specific stuff from installer.py 


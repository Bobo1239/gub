* python 3k compatibility
  - junk print (replace by what?)
  - junk has_key (replace by what?)
  - move to new style classes: class Foo -> class Foo (object).
    This means that all sorts of
      if type (foo) == type (bar)
    constructions barf

* use of member functions vs class variables/static functions:
   - need_source_tree
   - build_dependencies
   - dependencies
   - force_sequential_build

* Fix --branch mess:

  -gub: --branch=<PACKAGE>=<BRANCH>:<LOCAL_BRANCH>, eg
        --branch=lilypond=master-git.sv.gnu.org-lilypond.git
  -cron-builder: --branch=<LILYPOND-BRANCH>
                 --local-branch=<LILYPOND-LOCAL-BRANCH>
    + `branch' means remote branch
  -installer-builder: --branch=<PACKAGE>=<LOCAL_BRANCH>
    + `branch' means local branch

* Remove duplication of directory layout.  layout is partly duplicated
  in test-lily/* and *.make.  gub/settings should usable now from any
  .py, gub/settings.py --plaftorm '' prints layout for use in sh/make.

* Document and make easier to add new platform

    -3. gub/settings.py
    -2. gub/config_cache.py
    -1. gub/installer.py
     0. lilypond.make
     1. toevoegen aan platforms in makefile
     2. toevoegen aan platform lijst, die in test-lily/upload wordt gebruikt.

RENAMES

* repository -> source
* ./gub -> gublib ?
* ./gub/specs -> gub/builds?

* Robustification against ^C, esp. in in repository.download ()

* Use names of stage iso number in status/stamp file.

* move Scons, Bjam recipes to gub lib.

* code cygwin installer as alternative build spec.

* code .deb installer as alternative build spec.

* look at other installer-builders -> build spec?

* Split build recipes into Basic (configure??; make; make install),
  AutoTools

* Automagically do:  # # FIXME libtool too olds for autotool packages.

* move autotools patching to autogen/prepare_configure stage.

* fix all instances of makeflags () and compile/install

* move wrap_pkg_config from libgphoto2 to target/build spec (note
  configure: PATH setting?)

* Bootstrap whole toolchain from source on more platforms (freebsd)?

* Fix configure/make command env var settings (grep FIXME)

 @subst_method
 def CFLAGS(self):
    return 'bla'

or

 def init(self):
   self.CFLAGS='bla'   ? see noweb, no go?

* Packages file with download and update facility, like
  cyg-apt.

LOWER PRIORITY

* do not package emtpy subpackages (doc, devel)

- replace os. calls with os.context wrapper ones (make a real
  dry-run to quick-test all .py scripts?)

- better name for gubb.py

- name for gub-tester (test-repo, repo-builder?)

- Split gub/*py into packager, builder, platform

- Explode inheritance, and use membership in GUP

- move patches upstream, eg.

  * libpng

  * python x-compile.

  * cygwin GCC

  * zlib

- update packages:

  * Gnome 2.16

- strip lily specific stuff from installer.py 

- Bugfixes:

- junk Makefile, create python based driver.

- prerequisites: curl, gcc, libc-dev
  + [lilypond: autoconf (for automake),
    	       bison (for flex),
	       g++ (for python),
	       texinfo (for gettext),
	       libncurses-dev (for texinfo),
	       libcurl3-dev (for git),
	       libexpat-dev (for git),
	       libjpeg-dev (for netpbm),
	       libtiff-dev (for netpbm),
	       libx11-dev (for netpbm),
	       svn (for ghostscript),
	       python-gdbm (for gub: gub/gup.py) this means, btw, that gub
	          does not run with python from local; it lacks gdbm,
               inkscape (for lilypond doc)]


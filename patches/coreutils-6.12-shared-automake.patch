Build shared libcoreutils.so without using libtool
for GUB's librestrict(2) to kick-in.

--- coreutils-6.12/src/base64.c~	2008-05-26 08:40:33.000000000 +0200
+++ coreutils-6.12/src/base64.c	2009-02-13 10:10:20.000000000 +0100
@@ -50,7 +50,7 @@ static const struct option long_options[
   {NULL, 0, NULL, 0}
 };
 
-static void
+void
 usage (int status)
 {
   if (status != EXIT_SUCCESS)
--- coreutils-6.12/lib/gnulib.mk~	2008-05-26 14:38:40.000000000 +0200
+++ coreutils-6.12/lib/gnulib.mk	2009-02-13 10:17:34.000000000 +0100
@@ -27,7 +27,7 @@ MAINTAINERCLEANFILES =
 
 AM_CPPFLAGS =
 
-noinst_LIBRARIES += libcoreutils.a
+lib_LIBRARIES = libcoreutils.a
 
 libcoreutils_a_SOURCES =
 libcoreutils_a_LIBADD = $(gl_LIBOBJS)
--- coreutils-6.12/src/Makefile.am~	2007-03-20 08:24:27.000000000 +0100
+++ coreutils-6.12/src/Makefile.am	2009-02-13 10:35:04.000000000 +0100
@@ -57,7 +57,7 @@ AM_CPPFLAGS = -I$(top_srcdir)/lib
 # must precede $(LIBINTL) in order to ensure we use GNU getopt.
 # But libcoreutils.a must also follow $(LIBINTL), since libintl uses
 # replacement functions defined in libcoreutils.a.
-LDADD = ../lib/libcoreutils.a $(LIBINTL) ../lib/libcoreutils.a
+LDADD = -L../lib -lcoreutils $(LIBINTL)
 
 # for eaccess in lib/euidaccess.c.
 cp_LDADD = $(LDADD) $(LIB_EACCESS)
@@ -151,7 +151,7 @@ du_LDADD += $(LIBICONV)
 ptx_LDADD += $(LIBICONV)
 split_LDADD += $(LIBICONV)
 
-$(PROGRAMS): ../lib/libcoreutils.a
+$(PROGRAMS): ../lib/libcoreutils.so
 
 # Get the release year from ../lib/version-etc.c.
 RELEASE_YEAR = \

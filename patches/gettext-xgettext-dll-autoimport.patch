--- gettext-tools/src/xgettext.c~	2005-12-10 10:59:18.000000000 +0100
+++ gettext-tools/src/xgettext.c	2006-02-17 00:50:11.000000000 +0100
@@ -1686,6 +1686,17 @@
   string = from_current_source_encoding (string, pos->file_name, \
 					 pos->line_number);
 
+/*
+  Workaround for w32 --enable-auto-import
+ */
+struct formatstring_parser *
+get_formatstring_parser (int i)
+{
+  volatile void *ptr = formatstring_parsers;
+  struct formatstring_parser **arr = (struct formatstring_parser**)ptr;
+  return arr[i];
+}
+
 
 /* Update the is_format[] flags depending on the information given in the
    context.  */
@@ -1701,16 +1712,16 @@
       {
 	if (is_format[i] == undecided)
 	  {
-	    if (formatstring_parsers[i] == current_formatstring_parser1
+	    if (get_formatstring_parser (i) == current_formatstring_parser1
 		&& context.is_format1 != undecided)
 	      is_format[i] = (enum is_format) context.is_format1;
-	    if (formatstring_parsers[i] == current_formatstring_parser2
+	    if (get_formatstring_parser (i) == current_formatstring_parser2
 		&& context.is_format2 != undecided)
 	      is_format[i] = (enum is_format) context.is_format2;
 	  }
 	if (possible_format_p (is_format[i]))
 	  {
-	    struct formatstring_parser *parser = formatstring_parsers[i];
+	    struct formatstring_parser *parser = get_formatstring_parser (i);
 	    char *invalid_reason = NULL;
 	    void *descr = parser->parse (string, false, &invalid_reason);
 
@@ -1925,13 +1936,13 @@
   for (i = 0; i < NFORMATS; i++)
     {
       if (is_format[i] == undecided
-	  && (formatstring_parsers[i] == current_formatstring_parser1
-	      || formatstring_parsers[i] == current_formatstring_parser2)
+	  && (get_formatstring_parser (i) == current_formatstring_parser1
+	      || get_formatstring_parser (i) == current_formatstring_parser2)
 	  /* But avoid redundancy: objc-format is stronger than c-format.  */
 	  && !(i == format_c && possible_format_p (is_format[format_objc]))
 	  && !(i == format_objc && possible_format_p (is_format[format_c])))
 	{
-	  struct formatstring_parser *parser = formatstring_parsers[i];
+	  struct formatstring_parser *parser = get_formatstring_parser (i);
 	  char *invalid_reason = NULL;
 	  void *descr = parser->parse (mp->msgid, false, &invalid_reason);
 
@@ -2022,8 +2033,8 @@
 	 the msgid, whether the msgid is a format string, examine the
 	 msgid_plural.  This is a heuristic.  */
       for (i = 0; i < NFORMATS; i++)
-	if ((formatstring_parsers[i] == current_formatstring_parser1
-	     || formatstring_parsers[i] == current_formatstring_parser2)
+	if ((get_formatstring_parser (i) == current_formatstring_parser1
+	     || get_formatstring_parser (i) == current_formatstring_parser2)
 	    && (mp->is_format[i] == undecided || mp->is_format[i] == possible)
 	    /* But avoid redundancy: objc-format is stronger than c-format.  */
 	    && !(i == format_c
@@ -2031,7 +2042,7 @@
 	    && !(i == format_objc
 		 && possible_format_p (mp->is_format[format_c])))
 	  {
-	    struct formatstring_parser *parser = formatstring_parsers[i];
+	    struct formatstring_parser *parser = get_formatstring_parser (i);
 	    char *invalid_reason = NULL;
 	    void *descr =
 	      parser->parse (mp->msgid_plural, false, &invalid_reason);

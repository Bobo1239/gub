--- ghostscript-8.70/base/unix-dll.mak.orig	2010-05-31 13:02:31.866745351 +0200
+++ ghostscript-8.70/base/unix-dll.mak	2010-05-31 13:03:08.779719110 +0200
@@ -79,11 +79,13 @@ $(GS_SO_MAJOR): $(GS_SO_MAJOR_MINOR)
 # Build the small Ghostscript loaders, with Gtk+ and without
 
 $(GSSOC_XE): $(GS_SO) $(PSSRC)$(SOC_LOADER)
+	-ln -f $(GS_SO_MAJOR_MINOR) $(BINDIR)/gs.dll
-	$(GLCC) -g -o $(GSSOC_XE) $(PSSRC)dxmainc.c -L$(BINDIR) -l$(GS)
+	$(GLCC) -g -o $(GSSOC_XE) $(PSSRC)dxmainc.c -L$(BINDIR) $(XLDFLAGS) -lgs
 
 $(GSSOX_XE): $(GS_SO) $(PSSRC)$(SOC_LOADER)
+	-ln -f $(GS_SO_MAJOR_MINOR) $(BINDIR)/gs.dll
 	$(GLCC) -g $(SOC_CFLAGS) -o $(GSSOX_XE) $(PSSRC)$(SOC_LOADER) \
-	-L$(BINDIR) -l$(GS) $(SOC_LIBS)
+	-L$(BINDIR) $(XLDFLAGS) -lgs $(SOC_LIBS)
 
 # ------------------------- Recursive make targets ------------------------- #
 
@@ -89,7 +89,9 @@ $(GSSOX_XE): $(GS_SO) $(PSSRC)$(SOC_LOAD
 
 # ------------------------- Recursive make targets ------------------------- #
 
-SODEFS=LDFLAGS='$(LDFLAGS) $(LDFLAGS_SO)'\
+# Help -rpath $ORIGIN survive the $(MAKE) command line expansion
+MAKE_LDFLAGS=$(subst $$,\$$$$,$(LDFLAGS))
+SODEFS=LDFLAGS='$(MAKE_LDFLAGS) $(LDFLAGS_SO)'\
  GS_XE=$(BINDIR)/$(SOBINRELDIR)/$(GS_SONAME_MAJOR_MINOR)\
  STDIO_IMPLEMENTATION=c\
  DISPLAY_DEV=$(DD)$(SOOBJRELDIR)/display.dev\
--- ghostscript-8.70/base/unixlink.mak~	2010-06-16 11:18:39.336643903 +0200
+++ ghostscript-8.70/base/unixlink.mak	2010-06-16 11:43:29.437626062 +0200
@@ -44,13 +44,16 @@ $(GS_A): $(obj_tr) $(ECHOGS_XE) $(INT_AR
 	$(SH) <$(liar_tr)
 	$(RANLIB) $(GS_A)
 
+# Help -rpath $ORIGIN survive the ECHOGS_XE sh command line expansion
+SHELL_LDFLAGS=$(subst $$,\$$,$(LDFLAGS))
+
 # Here is the final link step.  The stuff with LD_RUN_PATH is for SVR4
 # systems with dynamic library loading; I believe it's harmless elsewhere.
 # The resetting of the environment variables to empty strings is for SCO Unix,
 # which has limited environment space.
 ldt_tr=$(PSOBJ)ldt.tr
 $(GS_XE): $(ld_tr) $(ECHOGS_XE) $(XE_ALL) $(PSOBJ)gsromfs$(COMPILE_INITS).$(OBJ)
-	$(ECHOGS_XE) -w $(ldt_tr) -n - $(CCLD) $(LDFLAGS) -o $(GS_XE)
+	$(ECHOGS_XE) -w $(ldt_tr) -n - $(CCLD) $(SHELL_LDFLAGS) -o $(GS_XE)
 	$(ECHOGS_XE) -a $(ldt_tr) -n -s $(PSOBJ)gsromfs$(COMPILE_INITS).$(OBJ) $(PSOBJ)gs.$(OBJ) -s
 	cat $(ld_tr) >>$(ldt_tr)
 	$(ECHOGS_XE) -a $(ldt_tr) -s - $(EXTRALIBS) $(STDLIBS)

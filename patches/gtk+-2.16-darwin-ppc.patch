--- gtk+-2.16.4/gdk/quartz/gdkdisplay-quartz.c~	2009-07-01 19:13:26.000000000 +0200
+++ gtk+-2.16.4/gdk/quartz/gdkdisplay-quartz.c	2010-03-04 15:24:23.318472590 +0100
@@ -54,7 +54,9 @@
   _gdk_screen = g_object_new (GDK_TYPE_SCREEN, NULL);
 
   nsscreen = [[NSScreen screens] objectAtIndex:0];
+#if 0
   gdk_screen_set_resolution (_gdk_screen, 72.0 * [nsscreen userSpaceScaleFactor]);
+#endif
 
   _gdk_visual_init ();
   gdk_screen_set_default_colormap (_gdk_screen,
--- gtk+-2.16.4/gdk/quartz/gdkeventloop-quartz.c~	2009-06-04 21:18:03.000000000 +0200
+++ gtk+-2.16.4/gdk/quartz/gdkeventloop-quartz.c	2010-03-04 15:41:23.557283565 +0100
@@ -5,6 +5,7 @@
 #include <sys/types.h>
 #include <sys/uio.h>
 #include <unistd.h>
+#include <fcntl.h>
 
 #include "gdkprivate-quartz.h"
 
--- gtk+-2.16.4/gdk/quartz/gdkgc-quartz.c~	2009-07-01 19:13:26.000000000 +0200
+++ gtk+-2.16.4/gdk/quartz/gdkgc-quartz.c	2010-03-04 15:51:48.688530958 +0100
@@ -406,6 +406,7 @@
   fg_pixel = _gdk_gc_get_fg_pixel (gc);
   bg_pixel = _gdk_gc_get_bg_pixel (gc);
 
+#if 0
   {
     CGBlendMode blend_mode = kCGBlendModeNormal;
 
@@ -441,6 +442,7 @@
 
     CGContextSetBlendMode (context, blend_mode);
   }
+#endif
 
   /* FIXME: implement subwindow mode */
 
@@ -569,7 +571,11 @@
 						     &callbacks);
 	    }
 
+#if 0
 	  baseSpace = (fill == GDK_STIPPLED) ? CGColorSpaceCreateWithName (kCGColorSpaceGenericRGB) : NULL;
+#else
+	  baseSpace = NULL;
+#endif
 	  patternSpace = CGColorSpaceCreatePattern (baseSpace);
 
 	  CGContextSetFillColorSpace (context, patternSpace);
--- gtk+-2.16.4/gtk/gtksearchenginequartz.c~	2009-06-04 21:18:04.000000000 +0200
+++ gtk+-2.16.4/gtk/gtksearchenginequartz.c	2010-03-04 17:34:20.558312391 +0100
@@ -44,6 +44,7 @@
 
 @end
 
+#if 0
 
 /* Definition of GObject */
 struct _GtkSearchEngineQuartzPrivate
@@ -233,6 +234,7 @@
 
   g_type_class_add_private (gobject_class, sizeof (GtkSearchEngineQuartzPrivate));
 }
+#endif
 
 static void
 _gtk_search_engine_quartz_init (GtkSearchEngineQuartz *engine)
@@ -240,7 +242,7 @@
   QUARTZ_POOL_ALLOC;
 
   engine->priv = G_TYPE_INSTANCE_GET_PRIVATE (engine, GTK_TYPE_SEARCH_ENGINE_QUARTZ, GtkSearchEngineQuartzPrivate);
-
+#if 0
   engine->priv->ns_query = [[NSMetadataQuery alloc] init];
   engine->priv->receiver = [[ResultReceiver alloc] init];
 
@@ -261,6 +263,7 @@
 				        object:engine->priv->ns_query];
 
   QUARTZ_POOL_RELEASE;
+#endif
 }
 
 GtkSearchEngine *
